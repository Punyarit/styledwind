import { Theme } from '@styledwind/theme';

const setLastValueToVariable = (v: string, prop: string) => {
  const val = v.split(' ');
  const color = `var(--${val[val.length - 1]})`;
  val[val.length - 1] = color;
  return `${prop}: ${val.join(' ')};`;
};
const styleFunc = (prop: string) => (v: string) => `${prop}:${v};`;
const fontFunc = (prop: string) => (v: string) => `${prop}:${Theme.font.family?.[v]};`;
const styleFuncWithValue = (prop: string) => (v: string) => `${prop}:var(--${v});`;
const setLastValueToVariableFunc = (prop: string) => (v: string) => setLastValueToVariable(v, prop);

const styleFuncPair = (prop1: string, prop2: string) => (v: string) =>
  `${styleFunc(prop1)(v)} ${styleFunc(prop2)(v)}`;

const setLastValueToVariablePair = (prop1: string, prop2: string) => (v: string) =>
  `${setLastValueToVariable(v, prop1)} ${setLastValueToVariable(v, prop2)}`;

const styleFuncWithValuePair = (prop1: string, prop2: string) => (v: string) =>
  `${styleFuncWithValue(prop1)(v)} ${styleFuncWithValue(prop2)(v)}`;

export const styleAbbrMapped: Record<string, (attr: string) => string> = {
  'al-c': styleFunc('align-content'),
  'al-i': styleFunc('align-items'),
  'al-s': styleFunc('align-self'),
  all: styleFunc('all'),
  animate: (v: string) => `animation:${v.slice(1)};`,
  'animate-delay': styleFunc('animation-delay'),
  'animate-direction': styleFunc('animation-direction'),
  'animate-duration': styleFunc('animation-duration'),
  'animate-fill-mode': styleFunc('animation-fill-mode'),
  'animate-iterate-count': styleFunc('animation-iteration-count'),
  'animate-name': styleFunc('animation-name'),
  'animate-play-state': styleFunc('animation-play-state'),
  'animate-timing-fn': styleFunc('animation-timing-function'),
  bg: styleFuncWithValue('background-color'),
  'bg-att': styleFunc('background-attachment'),
  'bg-blend-mode': styleFunc('background-blend-mode'),
  'bg-clip': styleFunc('background-clip'),
  'bg-img': styleFunc('background-image'),
  'bg-origin': styleFunc('background-origin'),
  'bg-pos': styleFunc('background-position'),
  'bg-repeat': styleFunc('background-repeat'),
  'bg-size': styleFunc('background-size'),
  bdr: setLastValueToVariableFunc('border'),
  'bdr-w': styleFunc('border-width'),
  'bdr-sx': styleFunc('border-style'),
  'bdr-l': setLastValueToVariableFunc('border-left'),
  'bdr-l-cl': styleFuncWithValue('border-left-color'),
  'bdr-l-w': styleFunc('border-left-width'),
  'bdr-l-sx': styleFunc('border-left-style'),
  'bdr-t': setLastValueToVariableFunc('border-top'),
  'bdr-t-cl': styleFuncWithValue('border-top-color'),
  'bdr-t-w': styleFunc('border-top-width'),
  'bdr-t-sx': styleFunc('border-top-style'),
  'bdr-r': setLastValueToVariableFunc('border-right'),
  'bdr-r-cl': styleFuncWithValue('border-right-color'),
  'bdr-r-w': styleFunc('border-right-width'),
  'bdr-r-sx': styleFunc('border-right-style'),
  'bdr-b': setLastValueToVariableFunc('border-bottom'),
  'bdr-b-cl': styleFuncWithValue('border-bottom-color'),
  'bdr-b-w': styleFunc('border-bottom-width'),
  'bdr-b-sx': styleFunc('border-bottom-style'),
  'bdr-x': setLastValueToVariablePair('border-left', 'border-right'),
  'bdr-x-cl': styleFuncWithValuePair('border-left-color', 'border-right-color'),
  'bdr-x-w': styleFuncPair('border-left-width', 'border-right-width'),
  'bdr-x-sx': styleFuncPair('border-left-style', 'border-right-style'),
  'bdr-y': setLastValueToVariablePair('border-top', 'border-bottom'),
  'bdr-y-cl': styleFuncWithValuePair('border-top-color', 'border-bottom-color'),
  'bdr-y-w': styleFuncPair('border-top-width', 'border-bottom-width'),
  'bdr-y-sx': styleFuncPair('border-top-style', 'border-bottom-style'),
  'bdr-rd': styleFunc('border-radius'),
  'bdr-tl-rd': styleFunc('border-top-left-radius'),
  'bdr-tr-rd': styleFunc('border-top-right-radius'),
  'bdr-bl-rd': styleFunc('border-bottom-left-radius'),
  'bdr-br-rd': styleFunc('border-bottom-right-radius'),
  'bdr-collapse': styleFunc('border-collapse'),
  'bdr-img': styleFunc('border-image'),
  'bdr-img-outset': styleFunc('border-image-outset'),
  'bdr-img-repeat': styleFunc('border-image-repeat'),
  'bdr-img-slice': styleFunc('border-image-slice'),
  'bdr-img-src': styleFunc('border-image-source'),
  'bdr-img-w': styleFunc('border-image-width'),
  'bdr-spacing': styleFunc('border-spacing'),
  shadow: setLastValueToVariableFunc('box-shadow'),
  sizing: styleFunc('box-sizing'),
  tx: styleFuncWithValue('color'),
  'col-count': styleFunc('column-count'),
  'col-fill': styleFunc('column-fill'),
  'col-gap': styleFunc('column-gap'),
  'col-rule': styleFunc('column-rule'),
  'col-rule-cl': styleFuncWithValue('column-rule-color'),
  'col-rule-sx': styleFunc('column-rule-style'),
  'col-rule-w': styleFunc('column-rule-width'),
  'col-span': styleFunc('column-span'),
  'col-w': styleFunc('column-width'),
  cols: styleFunc('columns'),
  d: styleFunc('display'),
  font: fontFunc('font-family'),
  fs: styleFunc('font-size'),
  fw: styleFunc('font-weight'),
  fx: styleFunc('flex'),
  'fx-basis': styleFunc('flex-basis'),
  'fx-direction': styleFunc('flex-direction'),
  'fx-flow': styleFunc('flex-flow'),
  'fx-grow': styleFunc('flex-grow'),
  'fx-shrink': styleFunc('flex-shrink'),
  gd: styleFunc('grid'),
  'gd-area': styleFunc('grid-area'),
  'gd-auto-cols': styleFunc('grid-auto-columns'),
  'gd-auto-flow': styleFunc('grid-auto-flow'),
  'gd-auto-rows': styleFunc('grid-auto-rows'),
  'gd-col': styleFunc('grid-column'),
  'gd-col-end': styleFunc('grid-column-end'),
  'gd-col-gap': styleFunc('grid-column-gap'),
  'gd-col-start': styleFunc('grid-column-start'),
  'gd-gap': styleFunc('grid-gap'),
  'gd-row': styleFunc('grid-row'),
  'gd-row-end': styleFunc('grid-row-end'),
  'gd-row-gap': styleFunc('grid-row-gap'),
  'gd-row-start': styleFunc('grid-row-start'),
  'gd-temp': styleFunc('grid-template'),
  'gd-temp-areas': styleFunc('grid-template-areas'),
  'gd-temp-cols': styleFunc('grid-template-columns'),
  'gd-temp-rows': styleFunc('grid-template-rows'),
  'img-orient': styleFunc('image-orientation'),
  'img-rendering': styleFunc('image-rendering'),
  'jt-c': styleFunc('justify-content'),
  'jt-i': styleFunc('justify-items'),
  'jt-s': styleFunc('justify-self'),
  lh: styleFunc('line-height'),
  'list-sx': styleFunc('list-style'),
  'list-sx-img': styleFunc('list-style-image'),
  'list-sx-pos': styleFunc('list-style-position'),
  'list-sx-type': styleFunc('list-style-type'),
  w: styleFunc('width'),
  'max-w': styleFunc('max-width'),
  'min-w': styleFunc('min-width'),
  h: styleFunc('height'),
  'max-h': styleFunc('max-height'),
  'min-h': styleFunc('min-height'),
  m: styleFunc('margin'),
  ml: styleFunc('margin-left'),
  mt: styleFunc('margin-top'),
  mr: styleFunc('margin-right'),
  mb: styleFunc('margin-bottom'),
  mx: styleFuncPair('margin-left', 'margin-right'),
  my: styleFuncPair('margin-top', 'margin-bottom'),
  'obj-fit': styleFunc('object-fit'),
  'obj-pos': styleFunc('object-position'),
  oul: setLastValueToVariableFunc('outline'),
  'oul-cl': styleFuncWithValue('outline-color'),
  'oul-offset': styleFunc('outline-offset'),
  'oul-sx': styleFunc('outline-style'),
  'oul-w': styleFunc('outline-width'),
  ovf: styleFunc('overflow'),
  'ovf-anchor': styleFunc('overflow-anchor'),
  'ovf-wrap': styleFunc('overflow-wrap'),
  'ovf-x': styleFunc('overflow-x'),
  'ovf-y': styleFunc('overflow-y'),
  'ptr-event': styleFunc('pointer-events'),
  p: styleFunc('padding'),
  pl: styleFunc('padding-left'),
  pt: styleFunc('padding-top'),
  pr: styleFunc('padding-right'),
  pb: styleFunc('padding-bottom'),
  px: styleFuncPair('padding-left', 'padding-right'),
  py: styleFuncPair('padding-top', 'padding-bottom'),
  pos: styleFunc('position'),
  'tx-align': styleFunc('text-align'),
  'tx-align-last': styleFunc('text-align-last'),
  'tx-combine-upright': styleFunc('text-combine-upright'),
  'tx-decor': styleFunc('text-decoration'),
  'tx-decor-cl': styleFuncWithValue('text-decoration-color'),
  'tx-decor-line': styleFunc('text-decoration-line'),
  'tx-decor-sx': styleFunc('text-decoration-style'),
  'tx-indent': styleFunc('text-indent'),
  'tx-justify': styleFunc('text-justify'),
  'tx-orient': styleFunc('text-orientation'),
  'tx-ovf': styleFunc('text-overflow'),
  'tx-rendering': styleFunc('text-rendering'),
  'tx-shadow': styleFunc('text-shadow'),
  'tx-tf': styleFunc('text-transform'),
  'tx-underline-pos': styleFunc('text-underline-position'),
  tsn: styleFunc('transition'),
  'tsn-delay': styleFunc('transition-delay'),
  'tsn-duration': styleFunc('transition-duration'),
  'tsn-property': styleFunc('transition-property'),
  'tsn-timing-function': styleFunc('transition-timing-function'),
  tf: styleFunc('transform'),
  'tf-origin': styleFunc('transform-origin'),
  'tf-style': styleFunc('transform-style'),
  select: styleFunc('user-select'),
  z: styleFunc('z-index'),
};
